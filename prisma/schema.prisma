// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  output        = "../generated/prisma"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id              String          @id @default(uuid())
  login           String          @unique
  password        String
  proxy           String? // –°–¥–µ–ª–∞–Ω–æ –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º
  method          Int // 1 –∏–ª–∏ 2
  userAgent       String
  posts           Post[]
  contentSettings ContentSetting?
  createdAt       DateTime        @default(now())
  ScheduledPost   ScheduledPost[]
}

model Post {
  id        String   @id @default(uuid())
  accountId String
  content   String
  imageUrl  String?
  hashtags  String?
  targetUrl String?
  promoted  Boolean  @default(false)
  createdAt DateTime @default(now())

  account       Account         @relation(fields: [accountId], references: [id])
  ScheduledPost ScheduledPost[]
}

model ContentSetting {
  id             String   @id @default(uuid())
  accountId      String   @unique
  promptText     String?
  promptImage    String?
  promptHashtags String?
  imageSource    String?
  targetUrl      String?
  autoPost       Boolean? @default(false)
  cronExpression String?
  promotedOnly   Boolean? @default(false)
  useAiOnImage   Boolean? // –¢–æ–ª—å–∫–æ –¥–ª—è –º–µ—Ç–æ–¥–∞ 2

  account Account @relation(fields: [accountId], references: [id])
}

model ScheduledPost {
  id          String   @id @default(uuid())
  accountId   String
  scheduledAt DateTime
  status      String // pending, done, failed
  createdAt   DateTime @default(now())
  postId      String?

  account Account @relation(fields: [accountId], references: [id])
  post    Post?   @relation(fields: [postId], references: [id]) // üëà –î–æ–±–∞–≤–ª—è–µ–º —ç—Ç–æ
}
